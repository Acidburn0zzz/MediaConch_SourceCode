/*  Copyright (c) MediaArea.net SARL. All Rights Reserved.
 *
 *  Use of this source code is governed by a GPLv3+/MPLv2+ license that can
 *  be found in the License.html file in the root of the source tree.
 */

#ifndef GENERATEDCSVVIDEOS_HPP
#define GENERATEDCSVVIDEOS_HPP

#include <map>
#include <vector>
#include <string>

/* This file is generated, do not modify it without the script. */
int get_generated_values_from_csv(std::map<std::string, std::map<std::string, std::vector<std::string> > >& values)
{
    {
        std::map<std::string, std::vector<std::string> > tmp;
        {
            std::vector<std::string> tmp_vec;
            tmp_vec.push_back("(Encrypted)");
            tmp_vec.push_back("0");
            tmp_vec.push_back("A-law");
            tmp_vec.push_back("AAC");
            tmp_vec.push_back("AC-3");
            tmp_vec.push_back("ACELP");
            tmp_vec.push_back("ADPCM");
            tmp_vec.push_back("ALAC");
            tmp_vec.push_back("ALS");
            tmp_vec.push_back("AMR");
            tmp_vec.push_back("Atrac3");
            tmp_vec.push_back("CELT");
            tmp_vec.push_back("Cooker");
            tmp_vec.push_back("DTS");
            tmp_vec.push_back("Dolby E");
            tmp_vec.push_back("E-AC-3");
            tmp_vec.push_back("EVRC");
            tmp_vec.push_back("FLAC");
            tmp_vec.push_back("GSM 6.10");
            tmp_vec.push_back("LA");
            tmp_vec.push_back("MACE 6");
            tmp_vec.push_back("MIDI");
            tmp_vec.push_back("MLP");
            tmp_vec.push_back("MPEG Audio");
            tmp_vec.push_back("Monkey's Audio");
            tmp_vec.push_back("Musepack SV7");
            tmp_vec.push_back("Musepack SV8");
            tmp_vec.push_back("Nellymoser");
            tmp_vec.push_back("Opus");
            tmp_vec.push_back("PCM");
            tmp_vec.push_back("PCM ");
            tmp_vec.push_back("QCELP");
            tmp_vec.push_back("Qdesign 2");
            tmp_vec.push_back("RK Audio");
            tmp_vec.push_back("RT29");
            tmp_vec.push_back("RealAudio Lossless");
            tmp_vec.push_back("SLS");
            tmp_vec.push_back("Shorten");
            tmp_vec.push_back("Speex");
            tmp_vec.push_back("TAK");
            tmp_vec.push_back("TTA");
            tmp_vec.push_back("TrueHD");
            tmp_vec.push_back("TrueHD / AC-3");
            tmp_vec.push_back("Truespeech");
            tmp_vec.push_back("TwinVQ");
            tmp_vec.push_back("VP6");
            tmp_vec.push_back("VP7");
            tmp_vec.push_back("Vorbis");
            tmp_vec.push_back("WMA");
            tmp_vec.push_back("WavPack");
            tmp_vec.push_back("ZWF");
            tmp["Format"] = tmp_vec;
        }
        values["Audio"] = tmp;
    }
    {
        std::map<std::string, std::vector<std::string> > tmp;
        {
            std::vector<std::string> tmp_vec;
            tmp_vec.push_back("3dv ");
            tmp_vec.push_back("3gs6");
            tmp_vec.push_back("7-Zip");
            tmp_vec.push_back("AAF");
            tmp_vec.push_back("AC-3");
            tmp_vec.push_back("ADIF");
            tmp_vec.push_back("ADTS");
            tmp_vec.push_back("AES3");
            tmp_vec.push_back("AIFF");
            tmp_vec.push_back("ALS");
            tmp_vec.push_back("AMR");
            tmp_vec.push_back("AMV");
            tmp_vec.push_back("AQTitle");
            tmp_vec.push_back("ASS");
            tmp_vec.push_back("AU");
            tmp_vec.push_back("AVC");
            tmp_vec.push_back("AVI");
            tmp_vec.push_back("AVS Video");
            tmp_vec.push_back("Adobe encore DVD");
            tmp_vec.push_back("Arri Raw");
            tmp_vec.push_back("BDAV");
            tmp_vec.push_back("BPG");
            tmp_vec.push_back("BZip2");
            tmp_vec.push_back("Bitmap");
            tmp_vec.push_back("Blender");
            tmp_vec.push_back("Blu-ray Clip info");
            tmp_vec.push_back("Blu-ray Index");
            tmp_vec.push_back("Blu-ray Movie object");
            tmp_vec.push_back("Blu-ray Playlist");
            tmp_vec.push_back("Blu-ray movie");
            tmp_vec.push_back("CAF");
            tmp_vec.push_back("CDDA");
            tmp_vec.push_back("CDXA/MPEG-PS");
            tmp_vec.push_back("CMP4");
            tmp_vec.push_back("CPC Captioning");
            tmp_vec.push_back("Captions Inc");
            tmp_vec.push_back("Cheeta");
            tmp_vec.push_back("DASH MPD");
            tmp_vec.push_back("DCP AM");
            tmp_vec.push_back("DCP CPL");
            tmp_vec.push_back("DCP PKL");
            tmp_vec.push_back("DDS");
            tmp_vec.push_back("DPG");
            tmp_vec.push_back("DPX");
            tmp_vec.push_back("DTS");
            tmp_vec.push_back("DV");
            tmp_vec.push_back("DVD Video");
            tmp_vec.push_back("DXW");
            tmp_vec.push_back("Dirac");
            tmp_vec.push_back("DivX");
            tmp_vec.push_back("E-AC-3");
            tmp_vec.push_back("ELF");
            tmp_vec.push_back("EXR");
            tmp_vec.push_back("Extended Module");
            tmp_vec.push_back("FLAC");
            tmp_vec.push_back("FLIC");
            tmp_vec.push_back("Flash Video");
            tmp_vec.push_back("GIF");
            tmp_vec.push_back("GXF");
            tmp_vec.push_back("GZip");
            tmp_vec.push_back("Google Video");
            tmp_vec.push_back("HDS F4M");
            tmp_vec.push_back("HEVC");
            tmp_vec.push_back("HLS");
            tmp_vec.push_back("ICO");
            tmp_vec.push_back("IMF AM");
            tmp_vec.push_back("IMF CPL");
            tmp_vec.push_back("IMF PKL");
            tmp_vec.push_back("ISM");
            tmp_vec.push_back("IVF");
            tmp_vec.push_back("Impulse Tracker");
            tmp_vec.push_back("JNG");
            tmp_vec.push_back("JPEG");
            tmp_vec.push_back("JPEG 2000");
            tmp_vec.push_back("JUNK");
            tmp_vec.push_back("LA");
            tmp_vec.push_back("LATM");
            tmp_vec.push_back("LXF");
            tmp_vec.push_back("M4A");
            tmp_vec.push_back("MIDI");
            tmp_vec.push_back("MLP");
            tmp_vec.push_back("MPEG Audio");
            tmp_vec.push_back("MPEG Video");
            tmp_vec.push_back("MPEG-4");
            tmp_vec.push_back("MPEG-4 Visual");
            tmp_vec.push_back("MPEG-PS");
            tmp_vec.push_back("MPEG-TS");
            tmp_vec.push_back("MPEG-TS 188+16");
            tmp_vec.push_back("MTV");
            tmp_vec.push_back("MXF");
            tmp_vec.push_back("MZ");
            tmp_vec.push_back("Matroska");
            tmp_vec.push_back("Module");
            tmp_vec.push_back("Monkey's Audio");
            tmp_vec.push_back("Musepack SV7");
            tmp_vec.push_back("Musepack SV8");
            tmp_vec.push_back("N19");
            tmp_vec.push_back("OGG");
            tmp_vec.push_back("OpenMG");
            tmp_vec.push_back("P2 Clip");
            tmp_vec.push_back("PCX");
            tmp_vec.push_back("PDF");
            tmp_vec.push_back("PNG");
            tmp_vec.push_back("PSD");
            tmp_vec.push_back("Pro Tools Session");
            tmp_vec.push_back("QLCM");
            tmp_vec.push_back("QuickTime");
            tmp_vec.push_back("R3D");
            tmp_vec.push_back("RK Audio");
            tmp_vec.push_back("RMP3");
            tmp_vec.push_back("RealMedia");
            tmp_vec.push_back("SAMI");
            tmp_vec.push_back("SCC");
            tmp_vec.push_back("SKM");
            tmp_vec.push_back("SSA");
            tmp_vec.push_back("Scream Tracker 3");
            tmp_vec.push_back("SequenceInfo");
            tmp_vec.push_back("ShockWave");
            tmp_vec.push_back("Shorten");
            tmp_vec.push_back("SubRip");
            tmp_vec.push_back("TAK");
            tmp_vec.push_back("TGA");
            tmp_vec.push_back("TIFF");
            tmp_vec.push_back("TTA");
            tmp_vec.push_back("TTML");
            tmp_vec.push_back("TrueHD");
            tmp_vec.push_back("TrueHD / AC-3");
            tmp_vec.push_back("TwinVQ");
            tmp_vec.push_back("VC-1");
            tmp_vec.push_back("VC-3");
            tmp_vec.push_back("WavPack");
            tmp_vec.push_back("Wave");
            tmp_vec.push_back("Wave64");
            tmp_vec.push_back("WebM");
            tmp_vec.push_back("Windows Media");
            tmp_vec.push_back("XDCAM Clip");
            tmp_vec.push_back("YUV4MPEG2");
            tmp_vec.push_back("ZIP");
            tmp_vec.push_back("ZWF");
            tmp_vec.push_back("ccff");
            tmp_vec.push_back("dby1");
            tmp["Format"] = tmp_vec;
        }
        values["General"] = tmp;
    }
    {
        std::map<std::string, std::vector<std::string> > tmp;
        {
            std::vector<std::string> tmp_vec;
            tmp_vec.push_back("BPG");
            tmp_vec.push_back("Bit field");
            tmp_vec.push_back("CCITT T.4");
            tmp_vec.push_back("Color-mapped + RLE");
            tmp_vec.push_back("DPX");
            tmp_vec.push_back("DirectX TC");
            tmp_vec.push_back("EXR");
            tmp_vec.push_back("GIF");
            tmp_vec.push_back("JNG");
            tmp_vec.push_back("JPEG");
            tmp_vec.push_back("JPEG 2000");
            tmp_vec.push_back("LZW");
            tmp_vec.push_back("PCX");
            tmp_vec.push_back("PNG");
            tmp_vec.push_back("PSD");
            tmp_vec.push_back("PackBits");
            tmp_vec.push_back("RGB");
            tmp_vec.push_back("Raw");
            tmp["Format"] = tmp_vec;
        }
        values["Image"] = tmp;
    }
    {
        std::map<std::string, std::vector<std::string> > tmp;
        {
            std::vector<std::string> tmp_vec;
            tmp_vec.push_back(" / ");
            tmp_vec.push_back(" /  /  /  / ");
            tmp_vec.push_back(" /  /  /  /  /  /  /  /  /  /  / ");
            tmp_vec.push_back(" /  /  /  /  /  /  /  /  / MPEG Video / MPEG Audio");
            tmp_vec.push_back(" /  /  /  /  /  /  / MPEG Video / MPEG Audio");
            tmp_vec.push_back(" /  /  / MPEG Video / MPEG Audio");
            tmp_vec.push_back(" / AVC / AAC / ARIB STD B24/B37 /  /  / ");
            tmp_vec.push_back(" / AVC / AC-3 / ");
            tmp_vec.push_back(" / AVC / MPEG Audio");
            tmp_vec.push_back(" / MPEG Audio / MPEG Audio / AVC");
            tmp_vec.push_back(" / MPEG Audio / MPEG Video / ");
            tmp_vec.push_back("0x00000000");
            tmp_vec.push_back("AAC / ");
            tmp_vec.push_back("AAC /  /  / ");
            tmp_vec.push_back("AC-3 / MPEG Video");
            tmp_vec.push_back("AVC / ");
            tmp_vec.push_back("AVC / AAC");
            tmp_vec.push_back("AVC / AAC /  /  /  /  / ");
            tmp_vec.push_back("AVC / AAC / AAC");
            tmp_vec.push_back("AVC / AAC / AAC / ARIB STD B24/B37 /  /  / ");
            tmp_vec.push_back("AVC / AAC / AAC / DVB Subtitle /  /  / ");
            tmp_vec.push_back("AVC / AAC / ARIB STD B24/B37 /  / ");
            tmp_vec.push_back("AVC / AC-3");
            tmp_vec.push_back("AVC / AC-3 / AC-3");
            tmp_vec.push_back("AVC / AC-3 / AC-3 /  /  /  /  /  /  /  / ");
            tmp_vec.push_back("AVC / AC-3 / E-AC-3");
            tmp_vec.push_back("AVC / E-AC-3");
            tmp_vec.push_back("AVC / E-AC-3 / E-AC-3");
            tmp_vec.push_back("AVC / KLV / KLV");
            tmp_vec.push_back("AVC / MPEG Audio");
            tmp_vec.push_back("AVC / MPEG Audio /  /  /  /  /  /  /  /  /  /  /  /  /  /  /  /  /  /  / DVB Subtitle / AC-3");
            tmp_vec.push_back("AVC / MPEG Audio /  /  /  /  /  /  /  /  /  /  /  /  /  /  /  /  / DVB Subtitle / AC-3");
            tmp_vec.push_back("AVC / MPEG Audio /  /  /  /  /  /  / AC-3");
            tmp_vec.push_back("AVC / MPEG Audio / AC-3 / AC-3");
            tmp_vec.push_back("AVC / MPEG Audio / MPEG Audio");
            tmp_vec.push_back("AVC / MPEG Audio / MPEG Audio / ");
            tmp_vec.push_back("AVC / MPEG Audio / MPEG Audio /  / DVB Subtitle");
            tmp_vec.push_back("AVC / MPEG Audio / MPEG Audio / DVB Subtitle");
            tmp_vec.push_back("AVC / MPEG Audio / MPEG Audio / Dolby E");
            tmp_vec.push_back("DVD-Video");
            tmp_vec.push_back("DivX Menu");
            tmp_vec.push_back("KLV / AVC / KLV");
            tmp_vec.push_back("MPEG Audio");
            tmp_vec.push_back("MPEG Audio / ");
            tmp_vec.push_back("MPEG Audio /  / MPEG Audio / MPEG Video /  /  / ");
            tmp_vec.push_back("MPEG Audio /  / MPEG Video");
            tmp_vec.push_back("MPEG Audio /  / MPEG Video / MPEG Audio");
            tmp_vec.push_back("MPEG Audio / AVC");
            tmp_vec.push_back("MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio");
            tmp_vec.push_back("MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio");
            tmp_vec.push_back("MPEG Audio / MPEG Audio / MPEG Video");
            tmp_vec.push_back("MPEG Audio / MPEG Video");
            tmp_vec.push_back("MPEG Audio / MPEG Video / ");
            tmp_vec.push_back("MPEG Audio / MPEG Video / MPEG Audio");
            tmp_vec.push_back("MPEG Video");
            tmp_vec.push_back("MPEG Video / ");
            tmp_vec.push_back("MPEG Video /  / MPEG Audio");
            tmp_vec.push_back("MPEG Video /  / MPEG Audio / MPEG Audio");
            tmp_vec.push_back("MPEG Video / AAC");
            tmp_vec.push_back("MPEG Video / AAC /  /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / AAC /  /  /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / AAC /  /  /  / ARIB STD B24/B37 / ");
            tmp_vec.push_back("MPEG Video / AAC / AAC / ARIB STD B24/B37 / ARIB STD B24/B37 /  /  /  /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / AAC / ARIB STD B24/B37 / ARIB STD B24/B37 /  /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / AAC / ARIB STD B24/B37 / ARIB STD B24/B37 /  /  /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / AC-3");
            tmp_vec.push_back("MPEG Video / AC-3 / ");
            tmp_vec.push_back("MPEG Video / AC-3 /  / ");
            tmp_vec.push_back("MPEG Video / AC-3 / AC-3");
            tmp_vec.push_back("MPEG Video / AC-3 / AC-3 /  / ");
            tmp_vec.push_back("MPEG Video / KLV");
            tmp_vec.push_back("MPEG Video / KLV / KLV");
            tmp_vec.push_back("MPEG Video / MPEG Audio");
            tmp_vec.push_back("MPEG Video / MPEG Audio / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  /  /  /  /  /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  /  /  /  /  /  /  /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  /  /  /  /  /  /  /  /  /  /  /  /  /  /  /  /  / DVB Subtitle");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  /  / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  /  / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  / AC-3 / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio /  / MPEG Audio / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio / AC-3");
            tmp_vec.push_back("MPEG Video / MPEG Audio / AC-3 /  / DVB Subtitle");
            tmp_vec.push_back("MPEG Video / MPEG Audio / AC-3 /  / MPEG Audio");
            tmp_vec.push_back("MPEG Video / MPEG Audio / DVB Subtitle");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio /  /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio /  /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio /  /  /  /  /  /  /  /  /  /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio / AC-3");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio / DVB Subtitle / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio / DVB Subtitle /  /  /  /  /  /  /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio / DVB Subtitle / DVB Subtitle");
            tmp_vec.push_back("MPEG Video / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio / MPEG Audio");
            tmp_vec.push_back("MPEG Video / MPEG Video / AAC / AAC /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Video / AAC / AAC / AAC / ARIB STD B24/B37 /  / ");
            tmp_vec.push_back("MPEG Video / MPEG Video / AAC / AAC / ARIB STD B24/B37 /  / ");
            tmp_vec.push_back("Timed Text");
            tmp["Format"] = tmp_vec;
        }
        values["Menu"] = tmp;
    }
    {
        std::map<std::string, std::vector<std::string> > tmp;
        {
            std::vector<std::string> tmp_vec;
            tmp_vec.push_back("0D-0C");
            tmp_vec.push_back("0x00000000");
            tmp_vec.push_back("6D-10");
            tmp_vec.push_back("80-01");
            tmp_vec.push_back("AS-11 Core");
            tmp_vec.push_back("AS-11 Segmentation");
            tmp_vec.push_back("AS-11 UKDPP");
            tmp_vec.push_back("Acquisition Metadata");
            tmp_vec.push_back("Audio Metadata");
            tmp_vec.push_back("CPL TC");
            tmp_vec.push_back("MXF TC");
            tmp_vec.push_back("QuickTime TC");
            tmp_vec.push_back("RTP");
            tmp_vec.push_back("SMPTE ATC");
            tmp_vec.push_back("SMPTE TC");
            tmp_vec.push_back("System");
            tmp_vec.push_back("System Core");
            tmp_vec.push_back("UMID");
            tmp_vec.push_back("WM TC");
            tmp_vec.push_back("WSS");
            tmp_vec.push_back("amf0");
            tmp_vec.push_back("mp4s");
            tmp["Format"] = tmp_vec;
        }
        values["Other"] = tmp;
    }
    {
        std::map<std::string, std::vector<std::string> > tmp;
        {
            std::vector<std::string> tmp_vec;
            tmp_vec.push_back("0x00000000");
            tmp_vec.push_back("AQTitle");
            tmp_vec.push_back("ARIB STD B24/B37");
            tmp_vec.push_back("ASS");
            tmp_vec.push_back("Adobe encore DVD");
            tmp_vec.push_back("CEA-608");
            tmp_vec.push_back("CMML");
            tmp_vec.push_back("CPC Captioning");
            tmp_vec.push_back("Captions Inc");
            tmp_vec.push_back("Cheeta");
            tmp_vec.push_back("DVB Subtitle");
            tmp_vec.push_back("DivX Subtitle");
            tmp_vec.push_back("EIA-608");
            tmp_vec.push_back("EIA-708");
            tmp_vec.push_back("Kate");
            tmp_vec.push_back("N19");
            tmp_vec.push_back("PDF");
            tmp_vec.push_back("PGS");
            tmp_vec.push_back("RLE");
            tmp_vec.push_back("SAMI");
            tmp_vec.push_back("SSA");
            tmp_vec.push_back("SalmonSoft");
            tmp_vec.push_back("SubRip");
            tmp_vec.push_back("Subrip");
            tmp_vec.push_back("TTML");
            tmp_vec.push_back("Teletext");
            tmp_vec.push_back("Teletext Subtitle");
            tmp_vec.push_back("Timed Text");
            tmp_vec.push_back("UTF-8");
            tmp_vec.push_back("VobSub");
            tmp_vec.push_back("mp4s");
            tmp["Format"] = tmp_vec;
        }
        values["Text"] = tmp;
    }
    {
        std::map<std::string, std::vector<std::string> > tmp;
        {
            std::vector<std::string> tmp_vec;
            tmp_vec.push_back("AIC");
            tmp_vec.push_back("AVC");
            tmp_vec.push_back("AVS Video");
            tmp_vec.push_back("Bitmap");
            tmp_vec.push_back("Canopus HQ");
            tmp_vec.push_back("Canopus HQX");
            tmp_vec.push_back("Canopus Lossless");
            tmp_vec.push_back("CineForm");
            tmp_vec.push_back("Cinepack");
            tmp_vec.push_back("Cross Fade");
            tmp_vec.push_back("DPX");
            tmp_vec.push_back("DV");
            tmp_vec.push_back("Dirac");
            tmp_vec.push_back("EXR");
            tmp_vec.push_back("FFV1");
            tmp_vec.push_back("FLC");
            tmp_vec.push_back("FLI");
            tmp_vec.push_back("Fraps");
            tmp_vec.push_back("GeoVision Advanced MPEG-4");
            tmp_vec.push_back("H.263");
            tmp_vec.push_back("HEVC");
            tmp_vec.push_back("Hap");
            tmp_vec.push_back("HuffYUV");
            tmp_vec.push_back("Indeo 3");
            tmp_vec.push_back("JPEG");
            tmp_vec.push_back("JPEG 2000");
            tmp_vec.push_back("Lagarith");
            tmp_vec.push_back("MPEG Video");
            tmp_vec.push_back("MPEG-4 Visual");
            tmp_vec.push_back("MS Video");
            tmp_vec.push_back("PNG");
            tmp_vec.push_back("ProRes");
            tmp_vec.push_back("REDC");
            tmp_vec.push_back("RGB");
            tmp_vec.push_back("RGBA");
            tmp_vec.push_back("RLE");
            tmp_vec.push_back("RV24");
            tmp_vec.push_back("RealVideo 1");
            tmp_vec.push_back("RealVideo 2");
            tmp_vec.push_back("RealVideo 3");
            tmp_vec.push_back("RealVideo 4");
            tmp_vec.push_back("Road Pizza");
            tmp_vec.push_back("Screen video");
            tmp_vec.push_back("Sony RAW SQ");
            tmp_vec.push_back("Sorenson 1");
            tmp_vec.push_back("Sorenson 3");
            tmp_vec.push_back("Sorenson Spark");
            tmp_vec.push_back("TechSmith");
            tmp_vec.push_back("Theora");
            tmp_vec.push_back("VC-1");
            tmp_vec.push_back("VC-3");
            tmp_vec.push_back("VP5");
            tmp_vec.push_back("VP6");
            tmp_vec.push_back("VP7");
            tmp_vec.push_back("VP8");
            tmp_vec.push_back("VP9");
            tmp_vec.push_back("WMV1");
            tmp_vec.push_back("WMV2");
            tmp_vec.push_back("WVP2");
            tmp_vec.push_back("YUV");
            tmp["Format"] = tmp_vec;
        }
        values["Video"] = tmp;
    }
    return 0;
}

#endif // ! GENERATEDCSVVIDEOS_HPP
